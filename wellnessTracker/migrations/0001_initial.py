# Generated by Django 4.2.13 on 2024-06-22 17:28

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlcoholHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alcohol_amount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Did you drink any alcohol? (amount)')),
                ('alcohol_unit', models.CharField(blank=True, choices=[('ml', 'ml'), ('l', 'l')], default='ml', max_length=2, null=True, verbose_name='Unit of alcohol')),
                ('alcohol_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('beer', 'Beer'), ('wine', 'Wine'), ('vodka', 'Vodka'), ('whiskey', 'Whiskey'), ('rum', 'Rum'), ('tequila', 'Tequila'), ('gin', 'Gin'), ('brandy', 'Brandy'), ('champagne', 'Champagne'), ('cider', 'Cider'), ('absinthe', 'Absinthe'), ('liqueur', 'Liqueur'), ('sake', 'Sake'), ('vermouth', 'Vermouth'), ('mead', 'Mead'), ('sherry', 'Sherry'), ('port', 'Port'), ('cocktail', 'Cocktail'), ('schnapps', 'Schnapps'), ('perry', 'Perry'), ('moonshine', 'Moonshine'), ('armagnac', 'Armagnac'), ('calvados', 'Calvados'), ('grappa', 'Grappa'), ('aquavit', 'Aquavit'), ('baijiu', 'Baijiu'), ('ouzo', 'Ouzo'), ('rakia', 'Rakia'), ('tequila-sunrise', 'Tequila Sunrise'), ('martini', 'Martini'), ('manhattan', 'Manhattan'), ('margarita', 'Margarita'), ('mojito', 'Mojito'), ('bloody-mary', 'Bloody Mary'), ('pina-colada', 'Pi√±a Colada'), ('cosmopolitan', 'Cosmopolitan'), ('old-fashioned', 'Old Fashioned')], max_length=99999, verbose_name='Type of alcohol')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the interface was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='CigaretteHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cigarettes', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='How many cigarettes did you smoke?')),
                ('cigarette_type', models.CharField(blank=True, choices=[('choose-type', 'Choose type'), ('full-flavor', 'Full Flavor'), ('light', 'Light'), ('ultra-light', 'Ultra Light'), ('menthol', 'Menthol'), ('flavored', 'Flavored'), ('heated-tobacco', 'Heated Tobacco Products (HTP)'), ('e-cigarette', 'E-Cigarette (Electronic Cigarette)'), ('roll-your-own', 'Roll-Your-Own'), ('nicotine-free', 'Nicotine-Free'), ('premium', 'Premium'), ('organic', 'Organic'), ('other', 'Other')], max_length=20, verbose_name='Type of cigarette')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the interface was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='CoffeHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coffee_amount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='How much coffee did you drink?')),
                ('coffee_unit', models.CharField(blank=True, choices=[('ml', 'ml'), ('l', 'l')], default='ml', max_length=2, null=True, verbose_name='Unit of coffee')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the interface was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='MoodEmotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emotions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('happy', 'Happy'), ('sad', 'Sad'), ('angry', 'Angry'), ('excited', 'Excited'), ('nervous', 'Nervous'), ('scared', 'Scared'), ('relaxed', 'Relaxed'), ('bored', 'Bored'), ('content', 'Content'), ('curious', 'Curious'), ('anxious', 'Anxious'), ('confused', 'Confused'), ('surprised', 'Surprised'), ('grateful', 'Grateful'), ('frustrated', 'Frustrated'), ('jealous', 'Jealous'), ('lonely', 'Lonely'), ('proud', 'Proud'), ('ashamed', 'Ashamed'), ('guilty', 'Guilty'), ('embarrassed', 'Embarrassed'), ('disappointed', 'Disappointed'), ('inspired', 'Inspired'), ('amused', 'Amused'), ('sympathetic', 'Sympathetic'), ('thoughtful', 'Thoughtful'), ('energetic', 'Energetic'), ('overwhelmed', 'Overwhelmed'), ('hopeful', 'Hopeful')], help_text='Which emotions did user feel', max_length=99999)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when emotions were last updated')),
            ],
        ),
        migrations.CreateModel(
            name='MoodNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, help_text='Custom user note related to their mood')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the note was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='MoodScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scale', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0, help_text='How user felt today on a scale from 0 to 10', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the scale was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Sleep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slept_scale', models.FloatField(blank=True, choices=[(Decimal('0'), '0.0'), (Decimal('0.5'), '0.5'), (Decimal('1'), '1.0'), (Decimal('1.5'), '1.5'), (Decimal('2'), '2.0'), (Decimal('2.5'), '2.5'), (Decimal('3'), '3.0'), (Decimal('3.5'), '3.5'), (Decimal('4'), '4.0'), (Decimal('4.5'), '4.5'), (Decimal('5'), '5.0'), (Decimal('5.5'), '5.5'), (Decimal('6'), '6.0'), (Decimal('6.5'), '6.5'), (Decimal('7'), '7.0'), (Decimal('7.5'), '7.5'), (Decimal('8'), '8.0'), (Decimal('8.5'), '8.5'), (Decimal('9'), '9.0'), (Decimal('9.5'), '9.5'), (Decimal('10'), '10.0'), (Decimal('10.5'), '10.5'), (Decimal('11'), '11.0'), (Decimal('11.5'), '11.5'), (Decimal('12'), '12.0'), (Decimal('12.5'), '12.5'), (Decimal('13'), '13.0'), (Decimal('13.5'), '13.5'), (Decimal('14'), '14.0'), (Decimal('14.5'), '14.5'), (Decimal('15'), '15.0'), (Decimal('15.5'), '15.5'), (Decimal('16'), '16.0'), (Decimal('16.5'), '16.5'), (Decimal('17'), '17.0'), (Decimal('17.5'), '17.5'), (Decimal('18'), '18.0'), (Decimal('18.5'), '18.5'), (Decimal('19'), '19.0'), (Decimal('19.5'), '19.5'), (Decimal('20'), '20.0'), (Decimal('20.5'), '20.5'), (Decimal('21'), '21.0'), (Decimal('21.5'), '21.5'), (Decimal('22'), '22.0'), (Decimal('22.5'), '22.5'), (Decimal('23'), '23.0'), (Decimal('23.5'), '23.5'), (Decimal('24'), '24.0')], default=0, help_text='How long user slept today', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the interface was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Sports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_times', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='How long did you exercise?')),
                ('exercise_unit', models.CharField(blank=True, choices=[('minutes', 'minutes'), ('hours', 'hours')], default='minutes', max_length=8, null=True, verbose_name='Unit of sports')),
                ('exercise_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('gym', 'Gym'), ('running', 'Running'), ('cycling', 'Cycling'), ('swimming', 'Swimming'), ('basketball', 'Basketball'), ('soccer', 'Soccer'), ('tennis', 'Tennis'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('hiking', 'Hiking'), ('climbing', 'Climbing'), ('dancing', 'Dancing'), ('boxing', 'Boxing'), ('martial-arts', 'Martial Arts'), ('weightlifting', 'Weightlifting'), ('crossfit', 'CrossFit'), ('aerobics', 'Aerobics'), ('rowing', 'Rowing'), ('skiing', 'Skiing'), ('snowboarding', 'Snowboarding'), ('skating', 'Skating'), ('surfing', 'Surfing'), ('kayaking', 'Kayaking'), ('golf', 'Golf'), ('cricket', 'Cricket'), ('rugby', 'Rugby'), ('baseball', 'Baseball'), ('volleyball', 'Volleyball'), ('badminton', 'Badminton'), ('table-tennis', 'Table Tennis'), ('archery', 'Archery'), ('fencing', 'Fencing'), ('horse-riding', 'Horse Riding'), ('gymnastics', 'Gymnastics'), ('triathlon', 'Triathlon'), ('bouldering', 'Bouldering')], max_length=99999, verbose_name='Type of exercise')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time when the interface was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alcohol_habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.alcoholhabit')),
                ('cigarette_habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.cigarettehabit')),
                ('coffee_habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.coffehabit')),
                ('mood_emotion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.moodemotion')),
                ('mood_note', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.moodnote')),
                ('mood_scale', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.moodscale')),
                ('sleep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.sleep')),
                ('sports', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wellnessTracker.sports')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
